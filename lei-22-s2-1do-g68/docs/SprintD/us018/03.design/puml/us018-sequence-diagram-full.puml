  @startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Store Managaer" as User
participant ":AnalyzeDealsUI" as UI
participant ":CSVReader" as CSV
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant ":StoreRepository" as StoreREPO
participant ":StoreDTO" as StoreDTO
participant ":StoreMapper" as StoreMapper
participant ":ClientRepository" as ClientREPO
participant ":ClientDTO" as ClientDTO
participant ":ClientMapper" as ClientMapper
participant ":OrderRepository" as OrderREPO
participant ":OrderDTO" as OrderDTO
participant ":OrderMapper" as OrderMapper
participant ":PropertyRepository" as PropertyREPO
participant ":AnnouncementRepository" as AnnouncementREPO
participant ":AnnouncementDTO" as AnnouncementDTO
participant ":AnnouncementMapper" as AnnouncementMapper
participant ":AnalyzeDealsController" as CTRL

activate User

User -> UI : Requests to analyze all the deals
activate UI

UI -> CSV : CSVReader()
activate CSV

            CSV -> RepositorySingleton : getInstance()
            activate RepositorySingleton

            RepositorySingleton --> CSV: repositories
            deactivate RepositorySingleton

            CSV -> PLAT : getStoreRepository()
            activate PLAT

            PLAT --> CSV: StoreRepository
            deactivate PLAT

            CSV -> StoreREPO : addStore()
            loop StoreDTO

            activate StoreREPO
            StoreREPO->StoreMapper: getStoreDTO()
            activate StoreMapper

            StoreMapper->StoreDTO:CreateStoreDTO()

            activate StoreDTO
            StoreDTO-->StoreMapper:StoreDTO
            deactivate StoreDTO
            StoreMapper-->StoreREPO:StoreDTO
            deactivate StoreMapper
            end
            StoreREPO --> CSV : Save Store information
            deactivate StoreREPO

            CSV -> RepositorySingleton : getInstance()
            activate RepositorySingleton

            RepositorySingleton --> CSV: repositories
            deactivate RepositorySingleton

            CSV -> PLAT : getClientRepository()
            activate PLAT

            PLAT --> CSV: ClientRepository
            deactivate PLAT

            CSV -> ClientREPO : addClient()
            loop ClientDTO

            activate ClientREPO
            ClientREPO->ClientMapper:getClientDTO()
            activate ClientMapper

            ClientMapper->ClientDTO:CreateClientDTO()

            activate ClientDTO
            ClientDTO-->ClientMapper:ClientDTO
            deactivate ClientDTO
            ClientMapper-->ClientREPO:ClientDTO
            deactivate ClientMapper
            end
            ClientREPO --> CSV : Save Client information
            deactivate ClientREPO

            CSV -> RepositorySingleton : getInstance()
            activate RepositorySingleton

            RepositorySingleton --> CSV: repositories
            deactivate RepositorySingleton

            CSV -> PLAT : gerOrderRepository()
            activate PLAT

            PLAT --> CSV: OrderRepository
            deactivate PLAT

            CSV -> OrderREPO : addOrder()
            loop OrderDTO

            activate OrderREPO
            OrderREPO->OrderMapper:getOrderDTO()
            activate OrderMapper

            OrderMapper->OrderDTO:CreateOrderDTO()

            activate OrderDTO
            OrderDTO-->OrderMapper:OrderDTO
            deactivate OrderDTO
            OrderMapper-->OrderREPO:OrderDTO
            deactivate OrderMapper
            end
            OrderREPO --> CSV : Save Order information
            deactivate OrderREPO

            CSV -> RepositorySingleton : getInstance()
            activate RepositorySingleton

            RepositorySingleton --> CSV: repositories
            deactivate RepositorySingleton

            CSV -> PLAT : getPropertyRepository()
            activate PLAT

            PLAT --> CSV: PropertyRepository
            deactivate PLAT

            CSV -> RepositorySingleton : getInstance()
            activate RepositorySingleton

            RepositorySingleton --> CSV: repositories
            deactivate RepositorySingleton

            CSV -> PLAT : getAnnouncementRepository()
            activate PLAT

            PLAT --> CSV: AnnouncementRepository
            deactivate PLAT

            CSV -> AnnouncementREPO : addAnnouncement()
            loop AnnouncementDTO

            activate AnnouncementREPO
            AnnouncementREPO->AnnouncementMapper:getAnnouncementDTO()
            activate AnnouncementMapper

            AnnouncementMapper->AnnouncementDTO:createAnnouncementDTO()

            activate AnnouncementDTO
            AnnouncementDTO-->AnnouncementMapper:AnnouncementDTO
            deactivate AnnouncementDTO
            AnnouncementMapper-->AnnouncementREPO:AnnouncementDTO
            deactivate AnnouncementMapper
            end
            AnnouncementREPO --> CSV : Save Announcement information
            deactivate AnnouncementREPO

CSV --> UI : All the information have been saved
deactivate CSV

UI -->  User: Asks if the user wants to run a Simple Linear Regression or a Multiple Linear Regression
deactivate UI

alt Simple Regression
User -> UI: selects to run Simple Linear Regression
activate UI

UI --> User: Asks if the user wants to run the simple linear regression for Property Area, distance form center, number of bedrooms, number of bathrooms or number of garages
deactivate UI

User -> UI: User selects to run the simple linear regression for Property Area, distance form center, number of bedrooms, number of bathrooms or number of garages
activate UI

UI -> CTRL: RegressoesLinearesSimples()
activate CTRL

CTRL --> UI: Show the values
deactivate

UI --> User: Show the values
deactivate
end

alt Multiple Regression
User -> UI: selects to run Multiple Linear Regression
activate UI

UI -> CTRL: RegressoesLinearesMultiples()
activate CTRL

CTRL --> UI: Show the values
deactivate

UI --> User: Show the values
deactivate
end
deactivate User
@enduml
